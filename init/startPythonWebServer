#!/bin/sh
# kFreeBSD do not accept scripts as interpreters, using #!/bin/sh and sourcing.
if [ true != "$INIT_D_SCRIPT_SOURCED" ] ; then
    set "$0" "$@"; INIT_D_SCRIPT_SOURCED=true . /lib/init/init-d-script
fi
### BEGIN INIT INFO
# Provides:          pythonWebServer
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Example initscript
# Description:       This file should be used to construct scripts to be
#                    placed in /etc/init.d.  This example start a
#                    single forking daemon capable of writing a pid
#                    file.  To get other behavoirs, implemend
#                    do_start(), do_stop() or other functions to
#                    override the defaults in /lib/init/init-d-script.
### END INIT INFO

# Author:  Allard saint albin Thierry
# Script that will start python web server
#

PROG="pythonWebServer"
RETVAL=0
MY_PATH="`dirname \"$0\"`"                      # relative
MY_PATH="`( cd \"$MY_PATH\" && pwd )`"          # absolutized and normalized
start() {
	cmd="$MY_PATH/verifyLaunching.sh"
	$cmd
	EXISTS=$?
	if [ "$EXISTS"  -eq "1" ]
	then
		echo "Starting $PROG:"
		NOW=$(date +"%Y_%m_%d_%H_%M_%S")
		cd "$MY_PATH/.."
		#CREATE LOG DIRECTORY
		if [ ! -d ./log ]
                        then
                        sudo -u pi mkdir ./log
                fi


		if [ ! -d ./log/pythonWebServer ]
			then
			sudo -u pi mkdir ./log/pythonWebServer
		fi
		########################
		(python ./pythonWebServer.py "./log/pythonWebServer/log_$NOW.log")&
		RETVAL=$?
		PID=$!
		if [ ! -d ./log/sendLedMode ]
			then
                        sudo -u pi mkdir ./log/sendLedMode
		fi
		sudo -u pi touch  ./log/sendLedMode/log_$NOW.log
		sudo -u pi chmod u+xrw ./log/sendLedMode/log_$NOW.log
		cmdSend="(sudo -u pi ./sendLedMode.sh >> ./log/sendLedMode/log_$NOW.log)&"
		eval $cmdSend
		[ "$RETVAL" = 0 ] && sudo  touch /var/lock/subsys/$PROG 
		sudo echo "$PID"  >  "$MY_PATH/pythonPID"
	else
		echo "$PROG is Already working"
	fi
	echo
}

stop() {	
	echo "Stopping $PROG:"

	killproc $PROG -TERM
	RETVAL=$?
	PID="$(cat $MY_PATH/pythonPID)"
	sudo kill "$PID"
	[ "$RETVAL" = 0 ] && sudo rm -f /var/lock/subsys/$PROG
	echo
}

reload() {	
	echo "Reloading $PROG:"
	killproc $PROG -HUP
	RETVAL=$?
	echo
}

case "$1" in	
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		stop
		start
		;;
	reload)
		reload
		;;
	condrestart)
		if [ -f /var/lock/subsys/$PROG ] ; then
			stop
			# avoid race
			sleep 3
			start
		fi
		;;
	status)
		status $PROG
		RETVAL=$?
		;;
	*)	
		echo "Usage: $0 {start|stop|restart|reload|condrestart|status}"
		RETVAL=1
esac
exit $RETVAL
